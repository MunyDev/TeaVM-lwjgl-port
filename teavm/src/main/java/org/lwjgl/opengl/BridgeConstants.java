package org.lwjgl.opengl;

import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;

import org.teavm.webgl2.WebGL2RenderingContext;

import static org.lwjgl.opengl.RealOGLConstants.*;

import sun.misc.Unsafe;
/**
 * This is a massive class mapping real constants to webgl constants
 * @author MunyDev
 *
 */
public class BridgeConstants {
	public static Map<String, Integer> m = new HashMap<String, Integer>();
	public static Map<String, Integer> wgl = new HashMap<String, Integer>();
	public static Map<String, String> ogltowgl = new HashMap<String, String>();
	static {
		m.put("GL_ACCUM", 0x100);
		m.put("GL_LOAD", 0x101);
		m.put("GL_RETURN", 0x102);
		m.put("GL_MULT", 0x103);
		m.put("GL_ADD", 0x104);
		m.put("GL_NEVER", 0x200);
		m.put("GL_LESS", 0x201);
		m.put("GL_EQUAL", 0x202);
		m.put("GL_LEQUAL", 0x203);
		m.put("GL_GREATER", 0x204);
		m.put("GL_NOTEQUAL", 0x205);
		m.put("GL_GEQUAL", 0x206);
		m.put("GL_ALWAYS", 0x207);
		m.put("GL_CURRENT_BIT", 0x1);
		m.put("GL_POINT_BIT", 0x2);
		m.put("GL_LINE_BIT", 0x4);
		m.put("GL_POLYGON_BIT", 0x8);
		m.put("GL_POLYGON_STIPPLE_BIT", 0x10);
		m.put("GL_PIXEL_MODE_BIT", 0x20);
		m.put("GL_LIGHTING_BIT", 0x40);
		m.put("GL_FOG_BIT", 0x80);
		m.put("GL_DEPTH_BUFFER_BIT", 0x100);
		m.put("GL_ACCUM_BUFFER_BIT", 0x200);
		m.put("GL_STENCIL_BUFFER_BIT", 0x400);
		m.put("GL_VIEWPORT_BIT", 0x800);
		m.put("GL_TRANSFORM_BIT", 0x1000);
		m.put("GL_ENABLE_BIT", 0x2000);
		m.put("GL_COLOR_BUFFER_BIT", 0x4000);
		m.put("GL_HINT_BIT", 0x8000);
		m.put("GL_EVAL_BIT", 0x10000);
		m.put("GL_LIST_BIT", 0x20000);
		m.put("GL_TEXTURE_BIT", 0x40000);
		m.put("GL_SCISSOR_BIT", 0x80000);
		m.put("GL_ALL_ATTRIB_BITS", 0xFFFFF);
		m.put("GL_POINTS", 0x0);
		m.put("GL_LINES", 0x1);
		m.put("GL_LINE_LOOP", 0x2);
		m.put("GL_LINE_STRIP", 0x3);
		m.put("GL_TRIANGLES", 0x4);
		m.put("GL_TRIANGLE_STRIP", 0x5);
		m.put("GL_TRIANGLE_FAN", 0x6);
		m.put("GL_QUADS", 0x7);
		m.put("GL_QUAD_STRIP", 0x8);
		m.put("GL_POLYGON", 0x9);
		m.put("GL_ZERO", 0x0);
		m.put("GL_ONE", 0x1);
		m.put("GL_SRC_COLOR", 0x300);
		m.put("GL_ONE_MINUS_SRC_COLOR", 0x301);
		m.put("GL_SRC_ALPHA", 0x302);
		m.put("GL_ONE_MINUS_SRC_ALPHA", 0x303);
		m.put("GL_DST_ALPHA", 0x304);
		m.put("GL_ONE_MINUS_DST_ALPHA", 0x305);
		m.put("GL_DST_COLOR", 0x306);
		m.put("GL_ONE_MINUS_DST_COLOR", 0x307);
		m.put("GL_SRC_ALPHA_SATURATE", 0x308);
		m.put("GL_CONSTANT_COLOR", 0x8001);
		m.put("GL_ONE_MINUS_CONSTANT_COLOR", 0x8002);
		m.put("GL_CONSTANT_ALPHA", 0x8003);
		m.put("GL_ONE_MINUS_CONSTANT_ALPHA", 0x8004);
		m.put("GL_TRUE", 0x1);
		m.put("GL_FALSE", 0x0);
		m.put("GL_CLIP_PLANE0", 0x3000);
		m.put("GL_CLIP_PLANE1", 0x3001);
		m.put("GL_CLIP_PLANE2", 0x3002);
		m.put("GL_CLIP_PLANE3", 0x3003);
		m.put("GL_CLIP_PLANE4", 0x3004);
		m.put("GL_CLIP_PLANE5", 0x3005);
		m.put("GL_BYTE", 0x1400);
		m.put("GL_UNSIGNED_BYTE", 0x1401);
		m.put("GL_SHORT", 0x1402);
		m.put("GL_UNSIGNED_SHORT", 0x1403);
		m.put("GL_INT", 0x1404);
		m.put("GL_UNSIGNED_INT", 0x1405);
		m.put("GL_FLOAT", 0x1406);
		m.put("GL_2_BYTES", 0x1407);
		m.put("GL_3_BYTES", 0x1408);
		m.put("GL_4_BYTES", 0x1409);
		m.put("GL_DOUBLE", 0x140A);
		m.put("GL_NONE", 0x0);
		m.put("GL_FRONT_LEFT", 0x400);
		m.put("GL_FRONT_RIGHT", 0x401);
		m.put("GL_BACK_LEFT", 0x402);
		m.put("GL_BACK_RIGHT", 0x403);
		m.put("GL_FRONT", 0x404);
		m.put("GL_BACK", 0x405);
		m.put("GL_LEFT", 0x406);
		m.put("GL_RIGHT", 0x407);
		m.put("GL_FRONT_AND_BACK", 0x408);
		m.put("GL_AUX0", 0x409);
		m.put("GL_AUX1", 0x40A);
		m.put("GL_AUX2", 0x40B);
		m.put("GL_AUX3", 0x40C);
		m.put("GL_NO_ERROR", 0x0);
		m.put("GL_INVALID_ENUM", 0x500);
		m.put("GL_INVALID_VALUE", 0x501);
		m.put("GL_INVALID_OPERATION", 0x502);
		m.put("GL_STACK_OVERFLOW", 0x503);
		m.put("GL_STACK_UNDERFLOW", 0x504);
		m.put("GL_OUT_OF_MEMORY", 0x505);
		m.put("GL_2D", 0x600);
		m.put("GL_3D", 0x601);
		m.put("GL_3D_COLOR", 0x602);
		m.put("GL_3D_COLOR_TEXTURE", 0x603);
		m.put("GL_4D_COLOR_TEXTURE", 0x604);
		m.put("GL_PASS_THROUGH_TOKEN", 0x700);
		m.put("GL_POINT_TOKEN", 0x701);
		m.put("GL_LINE_TOKEN", 0x702);
		m.put("GL_POLYGON_TOKEN", 0x703);
		m.put("GL_BITMAP_TOKEN", 0x704);
		m.put("GL_DRAW_PIXEL_TOKEN", 0x705);
		m.put("GL_COPY_PIXEL_TOKEN", 0x706);
		m.put("GL_LINE_RESET_TOKEN", 0x707);
		m.put("GL_EXP", 0x800);
		m.put("GL_EXP2", 0x801);
		m.put("GL_CW", 0x900);
		m.put("GL_CCW", 0x901);
		m.put("GL_COEFF", 0xA00);
		m.put("GL_ORDER", 0xA01);
		m.put("GL_DOMAIN", 0xA02);
		m.put("GL_CURRENT_COLOR", 0xB00);
		m.put("GL_CURRENT_INDEX", 0xB01);
		m.put("GL_CURRENT_NORMAL", 0xB02);
		m.put("GL_CURRENT_TEXTURE_COORDS", 0xB03);
		m.put("GL_CURRENT_RASTER_COLOR", 0xB04);
		m.put("GL_CURRENT_RASTER_INDEX", 0xB05);
		m.put("GL_CURRENT_RASTER_TEXTURE_COORDS", 0xB06);
		m.put("GL_CURRENT_RASTER_POSITION", 0xB07);
		m.put("GL_CURRENT_RASTER_POSITION_VALID", 0xB08);
		m.put("GL_CURRENT_RASTER_DISTANCE", 0xB09);
		m.put("GL_POINT_SMOOTH", 0xB10);
		m.put("GL_POINT_SIZE", 0xB11);
		m.put("GL_POINT_SIZE_RANGE", 0xB12);
		m.put("GL_POINT_SIZE_GRANULARITY", 0xB13);
		m.put("GL_LINE_SMOOTH", 0xB20);
		m.put("GL_LINE_WIDTH", 0xB21);
		m.put("GL_LINE_WIDTH_RANGE", 0xB22);
		m.put("GL_LINE_WIDTH_GRANULARITY", 0xB23);
		m.put("GL_LINE_STIPPLE", 0xB24);
		m.put("GL_LINE_STIPPLE_PATTERN", 0xB25);
		m.put("GL_LINE_STIPPLE_REPEAT", 0xB26);
		m.put("GL_LIST_MODE", 0xB30);
		m.put("GL_MAX_LIST_NESTING", 0xB31);
		m.put("GL_LIST_BASE", 0xB32);
		m.put("GL_LIST_INDEX", 0xB33);
		m.put("GL_POLYGON_MODE", 0xB40);
		m.put("GL_POLYGON_SMOOTH", 0xB41);
		m.put("GL_POLYGON_STIPPLE", 0xB42);
		m.put("GL_EDGE_FLAG", 0xB43);
		m.put("GL_CULL_FACE", 0xB44);
		m.put("GL_CULL_FACE_MODE", 0xB45);
		m.put("GL_FRONT_FACE", 0xB46);
		m.put("GL_LIGHTING", 0xB50);
		m.put("GL_LIGHT_MODEL_LOCAL_VIEWER", 0xB51);
		m.put("GL_LIGHT_MODEL_TWO_SIDE", 0xB52);
		m.put("GL_LIGHT_MODEL_AMBIENT", 0xB53);
		m.put("GL_SHADE_MODEL", 0xB54);
		m.put("GL_COLOR_MATERIAL_FACE", 0xB55);
		m.put("GL_COLOR_MATERIAL_PARAMETER", 0xB56);
		m.put("GL_COLOR_MATERIAL", 0xB57);
		m.put("GL_FOG", 0xB60);
		m.put("GL_FOG_INDEX", 0xB61);
		m.put("GL_FOG_DENSITY", 0xB62);
		m.put("GL_FOG_START", 0xB63);
		m.put("GL_FOG_END", 0xB64);
		m.put("GL_FOG_MODE", 0xB65);
		m.put("GL_FOG_COLOR", 0xB66);
		m.put("GL_DEPTH_RANGE", 0xB70);
		m.put("GL_DEPTH_TEST", 0xB71);
		m.put("GL_DEPTH_WRITEMASK", 0xB72);
		m.put("GL_DEPTH_CLEAR_VALUE", 0xB73);
		m.put("GL_DEPTH_FUNC", 0xB74);
		m.put("GL_ACCUM_CLEAR_VALUE", 0xB80);
		m.put("GL_STENCIL_TEST", 0xB90);
		m.put("GL_STENCIL_CLEAR_VALUE", 0xB91);
		m.put("GL_STENCIL_FUNC", 0xB92);
		m.put("GL_STENCIL_VALUE_MASK", 0xB93);
		m.put("GL_STENCIL_FAIL", 0xB94);
		m.put("GL_STENCIL_PASS_DEPTH_FAIL", 0xB95);
		m.put("GL_STENCIL_PASS_DEPTH_PASS", 0xB96);
		m.put("GL_STENCIL_REF", 0xB97);
		m.put("GL_STENCIL_WRITEMASK", 0xB98);
		m.put("GL_MATRIX_MODE", 0xBA0);
		m.put("GL_NORMALIZE", 0xBA1);
		m.put("GL_VIEWPORT", 0xBA2);
		m.put("GL_MODELVIEW_STACK_DEPTH", 0xBA3);
		m.put("GL_PROJECTION_STACK_DEPTH", 0xBA4);
		m.put("GL_TEXTURE_STACK_DEPTH", 0xBA5);
		m.put("GL_MODELVIEW_MATRIX", 0xBA6);
		m.put("GL_PROJECTION_MATRIX", 0xBA7);
		m.put("GL_TEXTURE_MATRIX", 0xBA8);
		m.put("GL_ATTRIB_STACK_DEPTH", 0xBB0);
		m.put("GL_CLIENT_ATTRIB_STACK_DEPTH", 0xBB1);
		m.put("GL_ALPHA_TEST", 0xBC0);
		m.put("GL_ALPHA_TEST_FUNC", 0xBC1);
		m.put("GL_ALPHA_TEST_REF", 0xBC2);
		m.put("GL_DITHER", 0xBD0);
		m.put("GL_BLEND_DST", 0xBE0);
		m.put("GL_BLEND_SRC", 0xBE1);
		m.put("GL_BLEND", 0xBE2);
		m.put("GL_LOGIC_OP_MODE", 0xBF0);
		m.put("GL_INDEX_LOGIC_OP", 0xBF1);
		m.put("GL_COLOR_LOGIC_OP", 0xBF2);
		m.put("GL_AUX_BUFFERS", 0xC00);
		m.put("GL_DRAW_BUFFER", 0xC01);
		m.put("GL_READ_BUFFER", 0xC02);
		m.put("GL_SCISSOR_BOX", 0xC10);
		m.put("GL_SCISSOR_TEST", 0xC11);
		m.put("GL_INDEX_CLEAR_VALUE", 0xC20);
		m.put("GL_INDEX_WRITEMASK", 0xC21);
		m.put("GL_COLOR_CLEAR_VALUE", 0xC22);
		m.put("GL_COLOR_WRITEMASK", 0xC23);
		m.put("GL_INDEX_MODE", 0xC30);
		m.put("GL_RGBA_MODE", 0xC31);
		m.put("GL_DOUBLEBUFFER", 0xC32);
		m.put("GL_STEREO", 0xC33);
		m.put("GL_RENDER_MODE", 0xC40);
		m.put("GL_PERSPECTIVE_CORRECTION_HINT", 0xC50);
		m.put("GL_POINT_SMOOTH_HINT", 0xC51);
		m.put("GL_LINE_SMOOTH_HINT", 0xC52);
		m.put("GL_POLYGON_SMOOTH_HINT", 0xC53);
		m.put("GL_FOG_HINT", 0xC54);
		m.put("GL_TEXTURE_GEN_S", 0xC60);
		m.put("GL_TEXTURE_GEN_T", 0xC61);
		m.put("GL_TEXTURE_GEN_R", 0xC62);
		m.put("GL_TEXTURE_GEN_Q", 0xC63);
		m.put("GL_PIXEL_MAP_I_TO_I", 0xC70);
		m.put("GL_PIXEL_MAP_S_TO_S", 0xC71);
		m.put("GL_PIXEL_MAP_I_TO_R", 0xC72);
		m.put("GL_PIXEL_MAP_I_TO_G", 0xC73);
		m.put("GL_PIXEL_MAP_I_TO_B", 0xC74);
		m.put("GL_PIXEL_MAP_I_TO_A", 0xC75);
		m.put("GL_PIXEL_MAP_R_TO_R", 0xC76);
		m.put("GL_PIXEL_MAP_G_TO_G", 0xC77);
		m.put("GL_PIXEL_MAP_B_TO_B", 0xC78);
		m.put("GL_PIXEL_MAP_A_TO_A", 0xC79);
		m.put("GL_PIXEL_MAP_I_TO_I_SIZE", 0xCB0);
		m.put("GL_PIXEL_MAP_S_TO_S_SIZE", 0xCB1);
		m.put("GL_PIXEL_MAP_I_TO_R_SIZE", 0xCB2);
		m.put("GL_PIXEL_MAP_I_TO_G_SIZE", 0xCB3);
		m.put("GL_PIXEL_MAP_I_TO_B_SIZE", 0xCB4);
		m.put("GL_PIXEL_MAP_I_TO_A_SIZE", 0xCB5);
		m.put("GL_PIXEL_MAP_R_TO_R_SIZE", 0xCB6);
		m.put("GL_PIXEL_MAP_G_TO_G_SIZE", 0xCB7);
		m.put("GL_PIXEL_MAP_B_TO_B_SIZE", 0xCB8);
		m.put("GL_PIXEL_MAP_A_TO_A_SIZE", 0xCB9);
		m.put("GL_UNPACK_SWAP_BYTES", 0xCF0);
		m.put("GL_UNPACK_LSB_FIRST", 0xCF1);
		m.put("GL_UNPACK_ROW_LENGTH", 0xCF2);
		m.put("GL_UNPACK_SKIP_ROWS", 0xCF3);
		m.put("GL_UNPACK_SKIP_PIXELS", 0xCF4);
		m.put("GL_UNPACK_ALIGNMENT", 0xCF5);
		m.put("GL_PACK_SWAP_BYTES", 0xD00);
		m.put("GL_PACK_LSB_FIRST", 0xD01);
		m.put("GL_PACK_ROW_LENGTH", 0xD02);
		m.put("GL_PACK_SKIP_ROWS", 0xD03);
		m.put("GL_PACK_SKIP_PIXELS", 0xD04);
		m.put("GL_PACK_ALIGNMENT", 0xD05);
		m.put("GL_MAP_COLOR", 0xD10);
		m.put("GL_MAP_STENCIL", 0xD11);
		m.put("GL_INDEX_SHIFT", 0xD12);
		m.put("GL_INDEX_OFFSET", 0xD13);
		m.put("GL_RED_SCALE", 0xD14);
		m.put("GL_RED_BIAS", 0xD15);
		m.put("GL_ZOOM_X", 0xD16);
		m.put("GL_ZOOM_Y", 0xD17);
		m.put("GL_GREEN_SCALE", 0xD18);
		m.put("GL_GREEN_BIAS", 0xD19);
		m.put("GL_BLUE_SCALE", 0xD1A);
		m.put("GL_BLUE_BIAS", 0xD1B);
		m.put("GL_ALPHA_SCALE", 0xD1C);
		m.put("GL_ALPHA_BIAS", 0xD1D);
		m.put("GL_DEPTH_SCALE", 0xD1E);
		m.put("GL_DEPTH_BIAS", 0xD1F);
		m.put("GL_MAX_EVAL_ORDER", 0xD30);
		m.put("GL_MAX_LIGHTS", 0xD31);
		m.put("GL_MAX_CLIP_PLANES", 0xD32);
		m.put("GL_MAX_TEXTURE_SIZE", 0xD33);
		m.put("GL_MAX_PIXEL_MAP_TABLE", 0xD34);
		m.put("GL_MAX_ATTRIB_STACK_DEPTH", 0xD35);
		m.put("GL_MAX_MODELVIEW_STACK_DEPTH", 0xD36);
		m.put("GL_MAX_NAME_STACK_DEPTH", 0xD37);
		m.put("GL_MAX_PROJECTION_STACK_DEPTH", 0xD38);
		m.put("GL_MAX_TEXTURE_STACK_DEPTH", 0xD39);
		m.put("GL_MAX_VIEWPORT_DIMS", 0xD3A);
		m.put("GL_MAX_CLIENT_ATTRIB_STACK_DEPTH", 0xD3B);
		m.put("GL_SUBPIXEL_BITS", 0xD50);
		m.put("GL_INDEX_BITS", 0xD51);
		m.put("GL_RED_BITS", 0xD52);
		m.put("GL_GREEN_BITS", 0xD53);
		m.put("GL_BLUE_BITS", 0xD54);
		m.put("GL_ALPHA_BITS", 0xD55);
		m.put("GL_DEPTH_BITS", 0xD56);
		m.put("GL_STENCIL_BITS", 0xD57);
		m.put("GL_ACCUM_RED_BITS", 0xD58);
		m.put("GL_ACCUM_GREEN_BITS", 0xD59);
		m.put("GL_ACCUM_BLUE_BITS", 0xD5A);
		m.put("GL_ACCUM_ALPHA_BITS", 0xD5B);
		m.put("GL_NAME_STACK_DEPTH", 0xD70);
		m.put("GL_AUTO_NORMAL", 0xD80);
		m.put("GL_MAP1_COLOR_4", 0xD90);
		m.put("GL_MAP1_INDEX", 0xD91);
		m.put("GL_MAP1_NORMAL", 0xD92);
		m.put("GL_MAP1_TEXTURE_COORD_1", 0xD93);
		m.put("GL_MAP1_TEXTURE_COORD_2", 0xD94);
		m.put("GL_MAP1_TEXTURE_COORD_3", 0xD95);
		m.put("GL_MAP1_TEXTURE_COORD_4", 0xD96);
		m.put("GL_MAP1_VERTEX_3", 0xD97);
		m.put("GL_MAP1_VERTEX_4", 0xD98);
		m.put("GL_MAP2_COLOR_4", 0xDB0);
		m.put("GL_MAP2_INDEX", 0xDB1);
		m.put("GL_MAP2_NORMAL", 0xDB2);
		m.put("GL_MAP2_TEXTURE_COORD_1", 0xDB3);
		m.put("GL_MAP2_TEXTURE_COORD_2", 0xDB4);
		m.put("GL_MAP2_TEXTURE_COORD_3", 0xDB5);
		m.put("GL_MAP2_TEXTURE_COORD_4", 0xDB6);
		m.put("GL_MAP2_VERTEX_3", 0xDB7);
		m.put("GL_MAP2_VERTEX_4", 0xDB8);
		m.put("GL_MAP1_GRID_DOMAIN", 0xDD0);
		m.put("GL_MAP1_GRID_SEGMENTS", 0xDD1);
		m.put("GL_MAP2_GRID_DOMAIN", 0xDD2);
		m.put("GL_MAP2_GRID_SEGMENTS", 0xDD3);
		m.put("GL_TEXTURE_1D", 0xDE0);
		m.put("GL_TEXTURE_2D", 0xDE1);
		m.put("GL_FEEDBACK_BUFFER_POINTER", 0xDF0);
		m.put("GL_FEEDBACK_BUFFER_SIZE", 0xDF1);
		m.put("GL_FEEDBACK_BUFFER_TYPE", 0xDF2);
		m.put("GL_SELECTION_BUFFER_POINTER", 0xDF3);
		m.put("GL_SELECTION_BUFFER_SIZE", 0xDF4);
		m.put("GL_TEXTURE_WIDTH", 0x1000);
		m.put("GL_TEXTURE_HEIGHT", 0x1001);
		m.put("GL_TEXTURE_INTERNAL_FORMAT", 0x1003);
		m.put("GL_TEXTURE_BORDER_COLOR", 0x1004);
		m.put("GL_TEXTURE_BORDER", 0x1005);
		m.put("GL_DONT_CARE", 0x1100);
		m.put("GL_FASTEST", 0x1101);
		m.put("GL_NICEST", 0x1102);
		m.put("GL_LIGHT0", 0x4000);
		m.put("GL_LIGHT1", 0x4001);
		m.put("GL_LIGHT2", 0x4002);
		m.put("GL_LIGHT3", 0x4003);
		m.put("GL_LIGHT4", 0x4004);
		m.put("GL_LIGHT5", 0x4005);
		m.put("GL_LIGHT6", 0x4006);
		m.put("GL_LIGHT7", 0x4007);
		m.put("GL_AMBIENT", 0x1200);
		m.put("GL_DIFFUSE", 0x1201);
		m.put("GL_SPECULAR", 0x1202);
		m.put("GL_POSITION", 0x1203);
		m.put("GL_SPOT_DIRECTION", 0x1204);
		m.put("GL_SPOT_EXPONENT", 0x1205);
		m.put("GL_SPOT_CUTOFF", 0x1206);
		m.put("GL_CONSTANT_ATTENUATION", 0x1207);
		m.put("GL_LINEAR_ATTENUATION", 0x1208);
		m.put("GL_QUADRATIC_ATTENUATION", 0x1209);
		m.put("GL_COMPILE", 0x1300);
		m.put("GL_COMPILE_AND_EXECUTE", 0x1301);
		m.put("GL_CLEAR", 0x1500);
		m.put("GL_AND", 0x1501);
		m.put("GL_AND_REVERSE", 0x1502);
		m.put("GL_COPY", 0x1503);
		m.put("GL_AND_INVERTED", 0x1504);
		m.put("GL_NOOP", 0x1505);
		m.put("GL_XOR", 0x1506);
		m.put("GL_OR", 0x1507);
		m.put("GL_NOR", 0x1508);
		m.put("GL_EQUIV", 0x1509);
		m.put("GL_INVERT", 0x150A);
		m.put("GL_OR_REVERSE", 0x150B);
		m.put("GL_COPY_INVERTED", 0x150C);
		m.put("GL_OR_INVERTED", 0x150D);
		m.put("GL_NAND", 0x150E);
		m.put("GL_SET", 0x150F);
		m.put("GL_EMISSION", 0x1600);
		m.put("GL_SHININESS", 0x1601);
		m.put("GL_AMBIENT_AND_DIFFUSE", 0x1602);
		m.put("GL_COLOR_INDEXES", 0x1603);
		m.put("GL_MODELVIEW", 0x1700);
		m.put("GL_PROJECTION", 0x1701);
		m.put("GL_TEXTURE", 0x1702);
		m.put("GL_COLOR", 0x1800);
		m.put("GL_DEPTH", 0x1801);
		m.put("GL_STENCIL", 0x1802);
		m.put("GL_COLOR_INDEX", 0x1900);
		m.put("GL_STENCIL_INDEX", 0x1901);
		m.put("GL_DEPTH_COMPONENT", 0x1902);
		m.put("GL_RED", 0x1903);
		m.put("GL_GREEN", 0x1904);
		m.put("GL_BLUE", 0x1905);
		m.put("GL_ALPHA", 0x1906);
		m.put("GL_RGB", 0x1907);
		m.put("GL_RGBA", 0x1908);
		m.put("GL_LUMINANCE", 0x1909);
		m.put("GL_LUMINANCE_ALPHA", 0x190A);
		m.put("GL_BITMAP", 0x1A00);
		m.put("GL_POINT", 0x1B00);
		m.put("GL_LINE", 0x1B01);
		m.put("GL_FILL", 0x1B02);
		m.put("GL_RENDER", 0x1C00);
		m.put("GL_FEEDBACK", 0x1C01);
		m.put("GL_SELECT", 0x1C02);
		m.put("GL_FLAT", 0x1D00);
		m.put("GL_SMOOTH", 0x1D01);
		m.put("GL_KEEP", 0x1E00);
		m.put("GL_REPLACE", 0x1E01);
		m.put("GL_INCR", 0x1E02);
		m.put("GL_DECR", 0x1E03);
		m.put("GL_VENDOR", 0x1F00);
		m.put("GL_RENDERER", 0x1F01);
		m.put("GL_VERSION", 0x1F02);
		m.put("GL_EXTENSIONS", 0x1F03);
		m.put("GL_S", 0x2000);
		m.put("GL_T", 0x2001);
		m.put("GL_R", 0x2002);
		m.put("GL_Q", 0x2003);
		m.put("GL_MODULATE", 0x2100);
		m.put("GL_DECAL", 0x2101);
		m.put("GL_TEXTURE_ENV_MODE", 0x2200);
		m.put("GL_TEXTURE_ENV_COLOR", 0x2201);
		m.put("GL_TEXTURE_ENV", 0x2300);
		m.put("GL_EYE_LINEAR", 0x2400);
		m.put("GL_OBJECT_LINEAR", 0x2401);
		m.put("GL_SPHERE_MAP", 0x2402);
		m.put("GL_TEXTURE_GEN_MODE", 0x2500);
		m.put("GL_OBJECT_PLANE", 0x2501);
		m.put("GL_EYE_PLANE", 0x2502);
		m.put("GL_NEAREST", 0x2600);
		m.put("GL_LINEAR", 0x2601);
		m.put("GL_NEAREST_MIPMAP_NEAREST", 0x2700);
		m.put("GL_LINEAR_MIPMAP_NEAREST", 0x2701);
		m.put("GL_NEAREST_MIPMAP_LINEAR", 0x2702);
		m.put("GL_LINEAR_MIPMAP_LINEAR", 0x2703);
		m.put("GL_TEXTURE_MAG_FILTER", 0x2800);
		m.put("GL_TEXTURE_MIN_FILTER", 0x2801);
		m.put("GL_TEXTURE_WRAP_S", 0x2802);
		m.put("GL_TEXTURE_WRAP_T", 0x2803);
		m.put("GL_CLAMP", 0x2900);
		m.put("GL_REPEAT", 0x2901);
		m.put("GL_CLIENT_PIXEL_STORE_BIT", 0x1);
		m.put("GL_CLIENT_VERTEX_ARRAY_BIT", 0x2);
		m.put("GL_ALL_CLIENT_ATTRIB_BITS", 0xFFFFFFFF);
		m.put("GL_POLYGON_OFFSET_FACTOR", 0x8038);
		m.put("GL_POLYGON_OFFSET_UNITS", 0x2A00);
		m.put("GL_POLYGON_OFFSET_POINT", 0x2A01);
		m.put("GL_POLYGON_OFFSET_LINE", 0x2A02);
		m.put("GL_POLYGON_OFFSET_FILL", 0x8037);
		m.put("GL_ALPHA4", 0x803B);
		m.put("GL_ALPHA8", 0x803C);
		m.put("GL_ALPHA12", 0x803D);
		m.put("GL_ALPHA16", 0x803E);
		m.put("GL_LUMINANCE4", 0x803F);
		m.put("GL_LUMINANCE8", 0x8040);
		m.put("GL_LUMINANCE12", 0x8041);
		m.put("GL_LUMINANCE16", 0x8042);
		m.put("GL_LUMINANCE4_ALPHA4", 0x8043);
		m.put("GL_LUMINANCE6_ALPHA2", 0x8044);
		m.put("GL_LUMINANCE8_ALPHA8", 0x8045);
		m.put("GL_LUMINANCE12_ALPHA4", 0x8046);
		m.put("GL_LUMINANCE12_ALPHA12", 0x8047);
		m.put("GL_LUMINANCE16_ALPHA16", 0x8048);
		m.put("GL_INTENSITY", 0x8049);
		m.put("GL_INTENSITY4", 0x804A);
		m.put("GL_INTENSITY8", 0x804B);
		m.put("GL_INTENSITY12", 0x804C);
		m.put("GL_INTENSITY16", 0x804D);
		m.put("GL_R3_G3_B2", 0x2A10);
		m.put("GL_RGB4", 0x804F);
		m.put("GL_RGB5", 0x8050);
		m.put("GL_RGB8", 0x8051);
		m.put("GL_RGB10", 0x8052);
		m.put("GL_RGB12", 0x8053);
		m.put("GL_RGB16", 0x8054);
		m.put("GL_RGBA2", 0x8055);
		m.put("GL_RGBA4", 0x8056);
		m.put("GL_RGB5_A1", 0x8057);
		m.put("GL_RGBA8", 0x8058);
		m.put("GL_RGB10_A2", 0x8059);
		m.put("GL_RGBA12", 0x805A);
		m.put("GL_RGBA16", 0x805B);
		m.put("GL_TEXTURE_RED_SIZE", 0x805C);
		m.put("GL_TEXTURE_GREEN_SIZE", 0x805D);
		m.put("GL_TEXTURE_BLUE_SIZE", 0x805E);
		m.put("GL_TEXTURE_ALPHA_SIZE", 0x805F);
		m.put("GL_TEXTURE_LUMINANCE_SIZE", 0x8060);
		m.put("GL_TEXTURE_INTENSITY_SIZE", 0x8061);
		m.put("GL_PROXY_TEXTURE_1D", 0x8063);
		m.put("GL_PROXY_TEXTURE_2D", 0x8064);
		m.put("GL_TEXTURE_PRIORITY", 0x8066);
		m.put("GL_TEXTURE_RESIDENT", 0x8067);
		m.put("GL_TEXTURE_BINDING_1D", 0x8068);
		m.put("GL_TEXTURE_BINDING_2D", 0x8069);
		m.put("GL_VERTEX_ARRAY", 0x8074);
		m.put("GL_NORMAL_ARRAY", 0x8075);
		m.put("GL_COLOR_ARRAY", 0x8076);
		m.put("GL_INDEX_ARRAY", 0x8077);
		m.put("GL_TEXTURE_COORD_ARRAY", 0x8078);
		m.put("GL_EDGE_FLAG_ARRAY", 0x8079);
		m.put("GL_VERTEX_ARRAY_SIZE", 0x807A);
		m.put("GL_VERTEX_ARRAY_TYPE", 0x807B);
		m.put("GL_VERTEX_ARRAY_STRIDE", 0x807C);
		m.put("GL_NORMAL_ARRAY_TYPE", 0x807E);
		m.put("GL_NORMAL_ARRAY_STRIDE", 0x807F);
		m.put("GL_COLOR_ARRAY_SIZE", 0x8081);
		m.put("GL_COLOR_ARRAY_TYPE", 0x8082);
		m.put("GL_COLOR_ARRAY_STRIDE", 0x8083);
		m.put("GL_INDEX_ARRAY_TYPE", 0x8085);
		m.put("GL_INDEX_ARRAY_STRIDE", 0x8086);
		m.put("GL_TEXTURE_COORD_ARRAY_SIZE", 0x8088);
		m.put("GL_TEXTURE_COORD_ARRAY_TYPE", 0x8089);
		m.put("GL_TEXTURE_COORD_ARRAY_STRIDE", 0x808A);
		m.put("GL_EDGE_FLAG_ARRAY_STRIDE", 0x808C);
		m.put("GL_VERTEX_ARRAY_POINTER", 0x808E);
		m.put("GL_NORMAL_ARRAY_POINTER", 0x808F);
		m.put("GL_COLOR_ARRAY_POINTER", 0x8090);
		m.put("GL_INDEX_ARRAY_POINTER", 0x8091);
		m.put("GL_TEXTURE_COORD_ARRAY_POINTER", 0x8092);
		m.put("GL_EDGE_FLAG_ARRAY_POINTER", 0x8093);
		m.put("GL_V2F", 0x2A20);
		m.put("GL_V3F", 0x2A21);
		m.put("GL_C4UB_V2F", 0x2A22);
		m.put("GL_C4UB_V3F", 0x2A23);
		m.put("GL_C3F_V3F", 0x2A24);
		m.put("GL_N3F_V3F", 0x2A25);
		m.put("GL_C4F_N3F_V3F", 0x2A26);
		m.put("GL_T2F_V3F", 0x2A27);
		m.put("GL_T4F_V4F", 0x2A28);
		m.put("GL_T2F_C4UB_V3F", 0x2A29);
		m.put("GL_T2F_C3F_V3F", 0x2A2A);
		m.put("GL_T2F_N3F_V3F", 0x2A2B);
		m.put("GL_T2F_C4F_N3F_V3F", 0x2A2C);
		m.put("GL_T4F_C4F_N3F_V4F", 0x2A2D);
		m.put("GL_LOGIC_OP", 0xBF1);
		m.put("GL_TEXTURE_COMPONENTS", 0x1003);
		
		
		
		//I guess we gotta use reflection for WebGLConstants as a test
		readOverClass(GL12.class);
		readOverClass(GL13.class);
		readOverClass(GL14.class);
		readOverClass(GL15.class);
		readOverClass(GL20.class);
		readOverClass(GL21.class);
		readOverClass(GL30.class);
		readOverClass(GL31.class);
		readOverClass(GL32.class);
		readOverClass(GL33.class);
		readOverClass(GL40.class);
		readOverClass(GL41.class);
		readOverClass(GL42.class);
		readOverClass(GL43.class);
		readOverClass(GL44.class);
		readOverClass(GL45.class);
		//Pretty slow but what we gotta deal with because readOverClass is a loop that iterates over all of the fields in the class
		// It would take me then hours to store them in a file and loop'em in the system.
		Class<WebGLConstants> c = WebGLConstants.class;
		for (Field f : c.getFields()) {
			if (f.getType().getName() == "int") {
				try {
					int i = (Integer)f.get(null);
					System.out.println(f.getName());
					wgl.put(f.getName(), i);
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
		ogltowgl.put("GL_DEPTH_BUFFER_BIT","DEPTH_BUFFER_BIT");
		ogltowgl.put("GL_STENCIL_BUFFER_BIT","STENCIL_BUFFER_BIT");
		ogltowgl.put("GL_COLOR_BUFFER_BIT","COLOR_BUFFER_BIT");
		ogltowgl.put("GL_POINTS","POINTS");
		ogltowgl.put("GL_LINES","LINES");
		ogltowgl.put("GL_LINE_LOOP","LINE_LOOP");
		ogltowgl.put("GL_LINE_STRIP","LINE_STRIP");
		ogltowgl.put("GL_TRIANGLES","TRIANGLES");
		ogltowgl.put("GL_TRIANGLE_STRIP","TRIANGLE_STRIP");
		ogltowgl.put("GL_TRIANGLE_FAN","TRIANGLE_FAN");
		ogltowgl.put("GL_ZERO","ZERO");
		ogltowgl.put("GL_ONE","ONE");
		ogltowgl.put("GL_SRC_COLOR","SRC_COLOR");
		ogltowgl.put("GL_ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_COLOR");
		ogltowgl.put("GL_SRC_ALPHA","SRC_ALPHA");
		ogltowgl.put("GL_ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_ALPHA");
		ogltowgl.put("GL_DST_ALPHA","DST_ALPHA");
		ogltowgl.put("GL_ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_ALPHA");
		ogltowgl.put("GL_DST_COLOR","DST_COLOR");
		ogltowgl.put("GL_ONE_MINUS_DST_COLOR","ONE_MINUS_DST_COLOR");
		ogltowgl.put("GL_SRC_ALPHA_SATURATE","SRC_ALPHA_SATURATE");
		ogltowgl.put("GL_FUNC_ADD","FUNC_ADD");
		ogltowgl.put("GL_BLEND_EQUATION","BLEND_EQUATION");
		ogltowgl.put("GL_BLEND_EQUATION_RGB","BLEND_EQUATION_RGB");
		ogltowgl.put("GL_BLEND_EQUATION_ALPHA","BLEND_EQUATION_ALPHA");
		ogltowgl.put("GL_FUNC_SUBSTRACT","FUNC_SUBTRACT");
		ogltowgl.put("GL_FUNC_REVERSE_SUBSTRACT","FUNC_REVERSE_SUBTRACT");
		ogltowgl.put("GL_BLEND_DST_RGB","BLEND_DST_RGB");
		ogltowgl.put("GL_BLEND_SRC_RGB","BLEND_SRC_RGB");
		ogltowgl.put("BLEND_DST_ALPHA","BLEND_DST_ALPHA");
		ogltowgl.put("BLEND_SRC_ALPHA","BLEND_SRC_ALPHA");
		ogltowgl.put("GL_CONSTANT_COLOR","CONSTANT_COLOR");
		ogltowgl.put("GL_ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR");
		ogltowgl.put("GL_CONSTANT_ALPHA","CONSTANT_ALPHA");
		ogltowgl.put("GL_ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA");
		ogltowgl.put("GL_BLEND_COLOR","BLEND_COLOR");
		ogltowgl.put("GL_ARRAY_BUFFER","ARRAY_BUFFER");
		ogltowgl.put("GL_ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER");
		ogltowgl.put("GL_ARRAY_BUFFER_BINDING","ARRAY_BUFFER_BINDING");
		ogltowgl.put("GL_ELEMENT_ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER_BINDING");
		ogltowgl.put("GL_STREAM_DRAW","STREAM_DRAW");
		ogltowgl.put("GL_STATIC_DRAW","STATIC_DRAW");
		ogltowgl.put("GL_DYNAMIC_DRAW","DYNAMIC_DRAW");
		ogltowgl.put("GL_BUFFER_SIZE","BUFFER_SIZE");
		ogltowgl.put("GL_BUFFER_USAGE","BUFFER_USAGE");
		ogltowgl.put("GL_CURRENT_VERTEX_ATTRIB","CURRENT_VERTEX_ATTRIB");
		ogltowgl.put("GL_FRONT","FRONT");
		ogltowgl.put("GL_BACK","BACK");
		ogltowgl.put("GL_FRONT_AND_BACK","FRONT_AND_BACK");
		ogltowgl.put("GL_CULL_FACE","CULL_FACE");
		ogltowgl.put("GL_BLEND","BLEND");
		ogltowgl.put("GL_DITHER","DITHER");
		ogltowgl.put("GL_STENCIL_TEST","STENCIL_TEST");
		ogltowgl.put("GL_DEPTH_TEST","DEPTH_TEST");
		ogltowgl.put("GL_SCISSOR_TEST","SCISSOR_TEST");
		ogltowgl.put("GL_POLYGON_OFFSET_FILL","POLYGON_OFFSET_FILL");
		ogltowgl.put("GL_SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_ALPHA_TO_COVERAGE");
		ogltowgl.put("GL_SAMPLE_COVERAGE","SAMPLE_COVERAGE");
		ogltowgl.put("GL_NO_ERROR","NO_ERROR");
		ogltowgl.put("GL_INVALID_ENUM","INVALID_ENUM");
		ogltowgl.put("GL_INVALID_VALUE","INVALID_VALUE");
		ogltowgl.put("GL_INVALID_OPERATION","INVALID_OPERATION");
		ogltowgl.put("GL_OUT_OF_MEMORY","OUT_OF_MEMORY");
		ogltowgl.put("GL_CW","CW");
		ogltowgl.put("GL_CCW","CCW");
		ogltowgl.put("GL_LINE_WIDTH","LINE_WIDTH");
		ogltowgl.put("GL_ALIASED_POINT_SIZE_RANGE","ALIASED_POINT_SIZE_RANGE");
		ogltowgl.put("GL_ALIASED_LINE_WIDTH_RANGE","ALIASED_LINE_WIDTH_RANGE");
		ogltowgl.put("GL_CULL_FACE_MODE","CULL_FACE_MODE");
		ogltowgl.put("GL_FRONT_FACE","FRONT_FACE");
		ogltowgl.put("GL_DEPTH_RANGE","DEPTH_RANGE");
		ogltowgl.put("GL_DEPTH_WRITEMASK","DEPTH_WRITEMASK");
		ogltowgl.put("GL_DEPTH_CLEAR_VALUE","DEPTH_CLEAR_VALUE");
		ogltowgl.put("GL_DEPTH_FUNC","DEPTH_FUNC");
		ogltowgl.put("GL_STENCIL_CLEAR_VALUE","STENCIL_CLEAR_VALUE");
		ogltowgl.put("GL_STENCIL_FUNC","STENCIL_FUNC");
		ogltowgl.put("GL_STENCIL_FAIL","STENCIL_FAIL");
		ogltowgl.put("GL_STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_FAIL");
		ogltowgl.put("GL_STENCIAL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_PASS");
		ogltowgl.put("GL_STENCIL_REF","STENCIL_REF");
		ogltowgl.put("GL_STENCIL_VALUE_MASK","STENCIL_VALUE_MASK");
		ogltowgl.put("GL_STENCIL_WRITEMASK","STENCIL_WRITEMASK");
		ogltowgl.put("GL_STENCIL_BACK_FUNC","STENCIL_BACK_FUNC");
		ogltowgl.put("GL_STENCIL_BACK_FAIL","STENCIL_BACK_FAIL");
		ogltowgl.put("GL_STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL");
		ogltowgl.put("GL_STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_PASS_DEPTH_PASS");
		ogltowgl.put("GL_STENCIL_BACK_REF","STENCIL_BACK_REF");
		ogltowgl.put("GL_STENCIL_BACK_VALUE_MASK","STENCIL_BACK_VALUE_MASK");
		ogltowgl.put("GL_STENCIL_BACK_WRITEMASK","STENCIL_BACK_WRITEMASK");
		ogltowgl.put("GL_VIEWPORT","VIEWPORT");
		ogltowgl.put("GL_SCISSOR_BOX","SCISSOR_BOX");
		ogltowgl.put("GL_COLOR_CLEAR_VALUE","COLOR_CLEAR_VALUE");
		ogltowgl.put("GL_COLOR_WRITEMASK","COLOR_WRITEMASK");
		ogltowgl.put("GL_UNPACK_ALIGNMENT","UNPACK_ALIGNMENT");
		ogltowgl.put("GL_PACK_ALIGNMENT","PACK_ALIGNMENT");
		ogltowgl.put("GL_MAX_TEXTURE_SIZE","MAX_TEXTURE_SIZE");
		ogltowgl.put("GL_MAX_VIEWPORT_DIMS","MAX_VIEWPORT_DIMS");
		ogltowgl.put("GL_SUBPIXEL_BITS","SUBPIXEL_BITS");
		ogltowgl.put("GL_RED_BITS","RED_BITS");
		ogltowgl.put("GL_GREEN_BITS","GREEN_BITS");
		ogltowgl.put("GL_BLUE_BITS","BLUE_BITS");
		ogltowgl.put("GL_ALPHA_BITS","ALPHA_BITS");
		ogltowgl.put("GL_DEPTH_BITS","DEPTH_BITS");
		ogltowgl.put("GL_STENCIL_BITS","STENCIL_BITS");
		ogltowgl.put("GL_POLYGON_OFFSET_UNITS","POLYGON_OFFSET_UNITS");
		ogltowgl.put("GL_POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FACTOR");
		ogltowgl.put("GL_TEXTURE_BINDING_2D","TEXTURE_BINDING_2D");
		ogltowgl.put("GL_SAMPLE_BUFFERS","SAMPLE_BUFFERS");
		ogltowgl.put("GL_SAMPLES","SAMPLES");
		ogltowgl.put("GL_SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_VALUE");
		ogltowgl.put("GL_SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_INVERT");
		ogltowgl.put("GL_COMPRESSED_TEXTURE_FORMATS","COMPRESSED_TEXTURE_FORMATS");
		ogltowgl.put("GL_DONT_CARE","DONT_CARE");
		ogltowgl.put("GL_FASTEST","FASTEST");
		ogltowgl.put("GL_NICEST","NICEST");
		ogltowgl.put("GL_GENERATE_MIPMAP_HINT","GENERATE_MIPMAP_HINT");
		ogltowgl.put("GL_BYTE","BYTE");
		ogltowgl.put("GL_UNSIGNED_BYTE","UNSIGNED_BYTE");
		ogltowgl.put("GL_SHORT","SHORT");
		ogltowgl.put("GL_UNSIGNED_SHORT","UNSIGNED_SHORT");
		ogltowgl.put("GL_INT","INT");
		ogltowgl.put("GL_UNSIGNED_INT","UNSIGNED_INT");
		ogltowgl.put("GL_FLOAT","FLOAT");
		ogltowgl.put("GL_DEPTH_COMPONENT","DEPTH_COMPONENT");
		ogltowgl.put("GL_ALPHA","ALPHA");
		ogltowgl.put("GL_RGB","RGB");
		ogltowgl.put("GL_RGBA","RGBA");
		ogltowgl.put("GL_LUMINANCE","LUMINANCE");
		ogltowgl.put("GL_LUMINANCE_ALPHA","LUMINANCE_ALPHA");
		ogltowgl.put("GL_UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_4_4_4_4");
		ogltowgl.put("GL_UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_5_5_1");
		ogltowgl.put("GL_UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_5_6_5");
		ogltowgl.put("GL_FRAGMENT_SHADER","FRAGMENT_SHADER");
		ogltowgl.put("GL_VERTEX_SHADER","VERTEX_SHADER");
		ogltowgl.put("GL_MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIBS");
		ogltowgl.put("GL_MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_UNIFORM_VECTORS");
		ogltowgl.put("GL_MAX_VARYING_VECTORS","MAX_VARYING_VECTORS");
		ogltowgl.put("GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS");
		ogltowgl.put("GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS");
		ogltowgl.put("GL_MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS");
		ogltowgl.put("GL_MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS");
		ogltowgl.put("GL_SHADER_TYPE","SHADER_TYPE");
		ogltowgl.put("GL_DELETE_STATUS","DELETE_STATUS");
		ogltowgl.put("GL_LINK_STATUS","LINK_STATUS");
		ogltowgl.put("GL_VALIDATE_STATUS","VALIDATE_STATUS");
		ogltowgl.put("GL_ATTACHED_SHADERS","ATTACHED_SHADERS");
		ogltowgl.put("GL_ACTIVE_UNIFORMS","ACTIVE_UNIFORMS");
		ogltowgl.put("GL_ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTES");
		ogltowgl.put("GL_SHADING_LANGUAGE_VERSION","SHADING_LANGUAGE_VERSION");
		ogltowgl.put("GL_CURRENT_PROGRAM","CURRENT_PROGRAM");
		ogltowgl.put("GL_NEVER","NEVER");
		ogltowgl.put("GL_LESS","LESS");
		ogltowgl.put("GL_EQUAL","EQUAL");
		ogltowgl.put("GL_LEQUAL","LEQUAL");
		ogltowgl.put("GL_GREATER","GREATER");
		ogltowgl.put("GL_NOTEQUAL","NOTEQUAL");
		ogltowgl.put("GL_GEQUAL","GEQUAL");
		ogltowgl.put("GL_ALWAYS","ALWAYS");
		ogltowgl.put("GL_KEEP","KEEP");
		ogltowgl.put("GL_REPLACE","REPLACE");
		ogltowgl.put("GL_INCR","INCR");
		ogltowgl.put("GL_DECR","DECR");
		ogltowgl.put("GL_INVERT","INVERT");
		ogltowgl.put("GL_INCR_WRAP","INCR_WRAP");
		ogltowgl.put("GL_DECR_WRAP","DECR_WRAP");
		ogltowgl.put("GL_VENDOR","VENDOR");
		ogltowgl.put("GL_RRENDERER","RENDERER");
		ogltowgl.put("GL_VERSION","VERSION");
		ogltowgl.put("GL_NEAREST","NEAREST");
		ogltowgl.put("GL_LINEAR","LINEAR");
		ogltowgl.put("GL_NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_NEAREST");
		ogltowgl.put("GL_LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST");
		ogltowgl.put("GL_NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_LINEAR");
		ogltowgl.put("GL_LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR");
		ogltowgl.put("GL_TEXTURE_MAG_FILTER","TEXTURE_MAG_FILTER");
		ogltowgl.put("GL_TEXTURE_MIN_FILTER","TEXTURE_MIN_FILTER");
		ogltowgl.put("GL_TEXTURE_WRAP_S","TEXTURE_WRAP_S");
		ogltowgl.put("GL_TEXTURE_WRAP_T","TEXTURE_WRAP_T");
		ogltowgl.put("GL_TEXTURE_2D","TEXTURE_2D");
		ogltowgl.put("GL_TEXTURE","TEXTURE");
		ogltowgl.put("GL_TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP");
		ogltowgl.put("GL_TEXTURE_BINDING_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP");
		ogltowgl.put("GL_TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_X");
		ogltowgl.put("GL_TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X");
		ogltowgl.put("GL_TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Y");
		ogltowgl.put("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y");
		ogltowgl.put("GL_TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_Z");
		ogltowgl.put("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z");
		ogltowgl.put("GL_MAX_CUBE_MAP_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE");
		ogltowgl.put("GL_TEXTURE0","TEXTURE0");
		ogltowgl.put("GL_TEXTURE1","TEXTURE1");
		ogltowgl.put("GL_TEXTURE2","TEXTURE2");
		ogltowgl.put("GL_TEXTURE3","TEXTURE3");
		ogltowgl.put("GL_TEXTURE4","TEXTURE4");
		ogltowgl.put("GL_TEXTURE5","TEXTURE5");
		ogltowgl.put("GL_TEXTURE6","TEXTURE6");
		ogltowgl.put("GL_TEXTURE7","TEXTURE7");
		ogltowgl.put("GL_TEXTURE8","TEXTURE8");
		ogltowgl.put("GL_TEXTURE9","TEXTURE9");
		ogltowgl.put("GL_TEXTURE10","TEXTURE10");
		ogltowgl.put("GL_TEXTURE11","TEXTURE11");
		ogltowgl.put("GL_TEXTURE12","TEXTURE12");
		ogltowgl.put("GL_TEXTURE13","TEXTURE13");
		ogltowgl.put("GL_TEXTURE14","TEXTURE14");
		ogltowgl.put("GL_TEXTURE15","TEXTURE15");
		ogltowgl.put("GL_TEXTURE16","TEXTURE16");
		ogltowgl.put("GL_TEXTURE17","TEXTURE17");
		ogltowgl.put("GL_TEXTURE18","TEXTURE18");
		ogltowgl.put("GL_TEXTURE19","TEXTURE19");
		ogltowgl.put("GL_TEXTURE20","TEXTURE20");
		ogltowgl.put("GL_TEXTURE21","TEXTURE21");
		ogltowgl.put("GL_TEXTURE22","TEXTURE22");
		ogltowgl.put("GL_TEXTURE23","TEXTURE23");
		ogltowgl.put("GL_TEXTURE24","TEXTURE24");
		ogltowgl.put("GL_TEXTURE25","TEXTURE25");
		ogltowgl.put("GL_TEXTURE26","TEXTURE26");
		ogltowgl.put("GL_TEXTURE27","TEXTURE27");
		ogltowgl.put("GL_TEXTURE28","TEXTURE28");
		ogltowgl.put("GL_TEXTURE29","TEXTURE29");
		ogltowgl.put("GL_TEXTURE30","TEXTURE30");
		ogltowgl.put("GL_TEXTURE31","TEXTURE31");
		ogltowgl.put("GL_ACTIVE_TEXTURE","ACTIVE_TEXTURE");
		ogltowgl.put("GL_REPEAT","REPEAT");
		ogltowgl.put("GL_CLAMP_TO_EDGE","CLAMP_TO_EDGE");
		ogltowgl.put("GL_MIRRORED_REPEAT","MIRRORED_REPEAT");
		ogltowgl.put("GL_FLOAT_VEC2","FLOAT_VEC2");
		ogltowgl.put("GL_FLOAT_VEC3","FLOAT_VEC3");
		ogltowgl.put("GL_FLOAT_VEC4","FLOAT_VEC4");
		ogltowgl.put("GL_INT_VEC2","INT_VEC2");
		ogltowgl.put("GL_INT_VEC3","INT_VEC3");
		ogltowgl.put("GL_INT_VEC4","INT_VEC4");
		ogltowgl.put("GL_BOOL","BOOL");
		ogltowgl.put("GL_BOOL_VEC2","BOOL_VEC2");
		ogltowgl.put("GL_BOOL_VEC3","BOOL_VEC3");
		ogltowgl.put("GL_BOOL_VEC4","BOOL_VEC4");
		ogltowgl.put("GL_FLOAT_MAT2","FLOAT_MAT2");
		ogltowgl.put("GL_FLOAT_MAT3","FLOAT_MAT3");
		ogltowgl.put("GL_FLOAT_MAT4","FLOAT_MAT4");
		ogltowgl.put("GL_SAMPLER_2D","SAMPLER_2D");
		ogltowgl.put("GL_SAMPLER_CUBE","SAMPLER_CUBE");
		ogltowgl.put("GL_Vertex","Vertex");
		ogltowgl.put("GL_VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_ENABLED");
		ogltowgl.put("GL_VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_SIZE");
		ogltowgl.put("GL_VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_STRIDE");
		ogltowgl.put("GL_VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_TYPE");
		ogltowgl.put("GL_VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_NORMALIZED");
		ogltowgl.put("GL_VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_POINTER");
		ogltowgl.put("GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
		ogltowgl.put("GL_COMPILE_STATUS","COMPILE_STATUS");
		ogltowgl.put("GL_LOW_FLOAT","LOW_FLOAT");
		ogltowgl.put("GL_MEDIUM_FLOAT","MEDIUM_FLOAT");
		ogltowgl.put("GL_HIGH_FLOAT","HIGH_FLOAT");
		ogltowgl.put("GL_LOW_INT","LOW_INT");
		ogltowgl.put("GL_MEDIUM_INT","MEDIUM_INT");
		ogltowgl.put("GL_HIGH_INT","HIGH_INT");
		ogltowgl.put("GL_Framebuffer","Framebuffer");
		ogltowgl.put("GL_FRAMEBUFFER","FRAMEBUFFER");
		ogltowgl.put("GL_RENDERBUFFER","RENDERBUFFER");
		ogltowgl.put("GL_RGBA4","RGBA4");
		ogltowgl.put("GL_RGB5_A1","RGB5_A1");
		ogltowgl.put("GL_RGB565","RGB565");
		ogltowgl.put("GL_DEPTH_COMPONENT16","DEPTH_COMPONENT16");
		ogltowgl.put("GL_STENCIL_INDEX","STENCIL_INDEX");
		ogltowgl.put("GL_STENCIL_INDEX8","STENCIL_INDEX8");
		ogltowgl.put("GL_DEPTH_STENCIL","DEPTH_STENCIL");
		ogltowgl.put("GL_RENDERBUFFER_WIDTH","RENDERBUFFER_WIDTH");
		ogltowgl.put("GL_RENDERBUFFER_HEIGHT","RENDERBUFFER_HEIGHT");
		ogltowgl.put("GL_RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_INTERNAL_FORMAT");
		ogltowgl.put("GL_RENDERBUFFER_RED_SIZE","RENDERBUFFER_RED_SIZE");
		ogltowgl.put("GL_RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_GREEN_SIZE");
		ogltowgl.put("GL_RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_BLUE_SIZE");
		ogltowgl.put("GL_RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_ALPHA_SIZE");
		ogltowgl.put("GL_RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_DEPTH_SIZE");
		ogltowgl.put("GL_RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_STENCIL_SIZE");
		ogltowgl.put("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
		ogltowgl.put("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
		ogltowgl.put("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
		ogltowgl.put("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
		ogltowgl.put("GL_COLOR_ATTACHMENT0","COLOR_ATTACHMENT0");
		ogltowgl.put("GL_DEPTH_ATTACHMENT","DEPTH_ATTACHMENT");
		ogltowgl.put("GL_STENCIL_ATTACHMENT","STENCIL_ATTACHMENT");
		ogltowgl.put("GL_DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT");
		ogltowgl.put("GL_NONE","NONE");
		ogltowgl.put("GL_FRAMEBUFFER_COMPLETE","FRAMEBUFFER_COMPLETE");
		ogltowgl.put("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
		ogltowgl.put("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
		ogltowgl.put("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
		ogltowgl.put("GL_FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_UNSUPPORTED");
		ogltowgl.put("GL_FRAMEBUFFER_BINDING","FRAMEBUFFER_BINDING");
		ogltowgl.put("GL_RENDERBUFFER_BINDING","RENDERBUFFER_BINDING");
		ogltowgl.put("GL_MAX_RENDERBUFFER_SIZE","MAX_RENDERBUFFER_SIZE");
		ogltowgl.put("GL_INVALID_FRAMEBUFFER_OPERATION","INVALID_FRAMEBUFFER_OPERATION");
		ogltowgl.put("GL_UNPACK_FLIP_Y_WEBGL","UNPACK_FLIP_Y_WEBGL");
		ogltowgl.put("GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL");
		ogltowgl.put("GL_CONTEXT_LOST_WEBGL","CONTEXT_LOST_WEBGL");
		ogltowgl.put("GL_UNPACK_COLORSPACE_CONVERSION_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL");
		readOverClass(WebGL2RenderingContext.class, ogltowgl);

	}
	public static void readOverClass(Class<?> cl) {
		for (Field f : cl.getFields()) {
			if (f.getType().getName() == "int") {
				try {
					int t = (int) f.get(null);
					String s = f.getName();
					
					m.put(s, t);
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		};
	}
	public static void readOverClass(Class<?> cl, Map<String, String> ogltowgl) {
		for (Field f : cl.getFields()) {
			if (f.getType().getName() == "int") {
				String s= f.getName();
				ogltowgl.put(s, "GL_"+ s);
			}
		}
	};
}
